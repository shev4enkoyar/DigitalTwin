@using Microsoft.AspNetCore.Identity
@using WebClient.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        returnUrl = query["returnUrl"];
    }
    string theme;
    if (!(Context.Request.Cookies.TryGetValue("ThemeSave", out theme)))
    {
        theme = "dark";
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

        <li class="nav-item">
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Профиль
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Профиль</a>
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout" title="Manage">Выйти</a>
                </div>
            </div>

            @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>*@
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/">
                <button type="submit" class="nav-link btn btn-link">Выйти</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="@theme nav-link" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Зарегистрироваться</a>
        </li>
        <li class="nav-item">
            <a class="@theme nav-link" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl">Войти</a>
        </li>
    }
</ul>
